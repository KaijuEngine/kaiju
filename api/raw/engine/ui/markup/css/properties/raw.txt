package properties // import "."


VARIABLES

var PropertyMap = map[string]document.CSSProperty{
	"accent-color":                AccentColor{},
	"align-content":               AlignContent{},
	"align-items":                 AlignItems{},
	"align-self":                  AlignSelf{},
	"all":                         All{},
	"animation":                   Animation{},
	"animation-delay":             AnimationDelay{},
	"animation-direction":         AnimationDirection{},
	"animation-duration":          AnimationDuration{},
	"animation-fill-mode":         AnimationFillMode{},
	"animation-iteration-count":   AnimationIterationCount{},
	"animation-name":              AnimationName{},
	"animation-play-state":        AnimationPlayState{},
	"animation-timing-function":   AnimationTimingFunction{},
	"aspect-ratio":                AspectRatio{},
	"backdrop-filter":             BackdropFilter{},
	"backface-visibility":         BackfaceVisibility{},
	"background":                  Background{},
	"background-attachment":       BackgroundAttachment{},
	"background-blend-mode":       BackgroundBlendMode{},
	"background-clip":             BackgroundClip{},
	"background-color":            BackgroundColor{},
	"background-image":            BackgroundImage{},
	"background-origin":           BackgroundOrigin{},
	"background-position":         BackgroundPosition{},
	"background-position-x":       BackgroundPositionX{},
	"background-position-y":       BackgroundPositionY{},
	"background-repeat":           BackgroundRepeat{},
	"background-size":             BackgroundSize{},
	"block-size":                  BlockSize{},
	"border":                      Border{},
	"border-block":                BorderBlock{},
	"border-block-color":          BorderBlockColor{},
	"border-block-end-color":      BorderBlockEndColor{},
	"border-block-end-style":      BorderBlockEndStyle{},
	"border-block-end-width":      BorderBlockEndWidth{},
	"border-block-start-color":    BorderBlockStartColor{},
	"border-block-start-style":    BorderBlockStartStyle{},
	"border-block-start-width":    BorderBlockStartWidth{},
	"border-block-style":          BorderBlockStyle{},
	"border-block-width":          BorderBlockWidth{},
	"border-bottom":               BorderBottom{},
	"border-bottom-color":         BorderBottomColor{},
	"border-bottom-left-radius":   BorderBottomLeftRadius{},
	"border-bottom-right-radius":  BorderBottomRightRadius{},
	"border-bottom-style":         BorderBottomStyle{},
	"border-bottom-width":         BorderBottomWidth{},
	"border-collapse":             BorderCollapse{},
	"border-color":                BorderColor{},
	"border-image":                BorderImage{},
	"border-image-outset":         BorderImageOutset{},
	"border-image-repeat":         BorderImageRepeat{},
	"border-image-slice":          BorderImageSlice{},
	"border-image-source":         BorderImageSource{},
	"border-image-width":          BorderImageWidth{},
	"border-inline":               BorderInline{},
	"border-inline-color":         BorderInlineColor{},
	"border-inline-end-color":     BorderInlineEndColor{},
	"border-inline-end-style":     BorderInlineEndStyle{},
	"border-inline-end-width":     BorderInlineEndWidth{},
	"border-inline-start-color":   BorderInlineStartColor{},
	"border-inline-start-style":   BorderInlineStartStyle{},
	"border-inline-start-width":   BorderInlineStartWidth{},
	"border-inline-style":         BorderInlineStyle{},
	"border-inline-width":         BorderInlineWidth{},
	"border-left":                 BorderLeft{},
	"border-left-color":           BorderLeftColor{},
	"border-left-style":           BorderLeftStyle{},
	"border-left-width":           BorderLeftWidth{},
	"border-radius":               BorderRadius{},
	"border-right":                BorderRight{},
	"border-right-color":          BorderRightColor{},
	"border-right-style":          BorderRightStyle{},
	"border-right-width":          BorderRightWidth{},
	"border-spacing":              BorderSpacing{},
	"border-style":                BorderStyle{},
	"border-top":                  BorderTop{},
	"border-top-color":            BorderTopColor{},
	"border-top-left-radius":      BorderTopLeftRadius{},
	"border-top-right-radius":     BorderTopRightRadius{},
	"border-top-style":            BorderTopStyle{},
	"border-top-width":            BorderTopWidth{},
	"border-width":                BorderWidth{},
	"bottom":                      Bottom{},
	"box-decoration-break":        BoxDecorationBreak{},
	"box-reflect":                 BoxReflect{},
	"box-shadow":                  BoxShadow{},
	"box-sizing":                  BoxSizing{},
	"break-after":                 BreakAfter{},
	"break-before":                BreakBefore{},
	"break-inside":                BreakInside{},
	"caption-side":                CaptionSide{},
	"caret-color":                 CaretColor{},
	"charset":                     Charset{},
	"clear":                       Clear{},
	"clip":                        Clip{},
	"color":                       Color{},
	"column-count":                ColumnCount{},
	"column-fill":                 ColumnFill{},
	"column-gap":                  ColumnGap{},
	"column-rule":                 ColumnRule{},
	"column-rule-color":           ColumnRuleColor{},
	"column-rule-style":           ColumnRuleStyle{},
	"column-rule-width":           ColumnRuleWidth{},
	"column-span":                 ColumnSpan{},
	"column-width":                ColumnWidth{},
	"columns":                     Columns{},
	"content":                     Content{},
	"counter-increment":           CounterIncrement{},
	"counter-reset":               CounterReset{},
	"cursor":                      Cursor{},
	"direction":                   Direction{},
	"display":                     Display{},
	"empty-cells":                 EmptyCells{},
	"filter":                      Filter{},
	"flex":                        Flex{},
	"flex-basis":                  FlexBasis{},
	"flex-direction":              FlexDirection{},
	"flex-flow":                   FlexFlow{},
	"flex-grow":                   FlexGrow{},
	"flex-shrink":                 FlexShrink{},
	"flex-wrap":                   FlexWrap{},
	"float":                       Float{},
	"font":                        Font{},
	"font-face":                   FontFace{},
	"font-family":                 FontFamily{},
	"font-feature-settings":       FontFeatureSettings{},
	"font-feature-values":         FontFeatureValues{},
	"font-kerning":                FontKerning{},
	"font-language-override":      FontLanguageOverride{},
	"font-size":                   FontSize{},
	"font-size-adjust":            FontSizeAdjust{},
	"font-stretch":                FontStretch{},
	"font-style":                  FontStyle{},
	"font-synthesis":              FontSynthesis{},
	"font-variant":                FontVariant{},
	"font-variant-alternates":     FontVariantAlternates{},
	"font-variant-caps":           FontVariantCaps{},
	"font-variant-east-asian":     FontVariantEastAsian{},
	"font-variant-ligatures":      FontVariantLigatures{},
	"font-variant-numeric":        FontVariantNumeric{},
	"font-variant-position":       FontVariantPosition{},
	"font-weight":                 FontWeight{},
	"gap":                         Gap{},
	"grid":                        Grid{},
	"grid-area":                   GridArea{},
	"grid-auto-columns":           GridAutoColumns{},
	"grid-auto-flow":              GridAutoFlow{},
	"grid-auto-rows":              GridAutoRows{},
	"grid-column":                 GridColumn{},
	"grid-column-end":             GridColumnEnd{},
	"grid-column-gap":             GridColumnGap{},
	"grid-column-start":           GridColumnStart{},
	"grid-gap":                    GridGap{},
	"grid-row":                    GridRow{},
	"grid-row-end":                GridRowEnd{},
	"grid-row-gap":                GridRowGap{},
	"grid-row-start":              GridRowStart{},
	"grid-template":               GridTemplate{},
	"grid-template-areas":         GridTemplateAreas{},
	"grid-template-columns":       GridTemplateColumns{},
	"grid-template-rows":          GridTemplateRows{},
	"hanging-punctuation":         HangingPunctuation{},
	"height":                      Height{},
	"hyphens":                     Hyphens{},
	"image-rendering":             ImageRendering{},
	"import":                      Import{},
	"inline-size":                 InlineSize{},
	"inset":                       Inset{},
	"inset-block":                 InsetBlock{},
	"inset-block-end":             InsetBlockEnd{},
	"inset-block-start":           InsetBlockStart{},
	"inset-inline":                InsetInline{},
	"inset-inline-end":            InsetInlineEnd{},
	"inset-inline-start":          InsetInlineStart{},
	"isolation":                   Isolation{},
	"justify-content":             JustifyContent{},
	"justify-items":               JustifyItems{},
	"justify-self":                JustifySelf{},
	"keyframes":                   Keyframes{},
	"left":                        Left{},
	"letter-spacing":              LetterSpacing{},
	"line-break":                  LineBreak{},
	"line-height":                 LineHeight{},
	"list-style":                  ListStyle{},
	"list-style-image":            ListStyleImage{},
	"list-style-position":         ListStylePosition{},
	"list-style-type":             ListStyleType{},
	"margin":                      Margin{},
	"margin-block":                MarginBlock{},
	"margin-block-end":            MarginBlockEnd{},
	"margin-block-start":          MarginBlockStart{},
	"margin-bottom":               MarginBottom{},
	"margin-inline":               MarginInline{},
	"margin-inline-end":           MarginInlineEnd{},
	"margin-inline-start":         MarginInlineStart{},
	"margin-left":                 MarginLeft{},
	"margin-right":                MarginRight{},
	"margin-top":                  MarginTop{},
	"mask":                        Mask{},
	"mask-clip":                   MaskClip{},
	"mask-composite":              MaskComposite{},
	"mask-image":                  MaskImage{},
	"mask-mode":                   MaskMode{},
	"mask-origin":                 MaskOrigin{},
	"mask-position":               MaskPosition{},
	"mask-repeat":                 MaskRepeat{},
	"mask-size":                   MaskSize{},
	"mask-type":                   MaskType{},
	"max-height":                  MaxHeight{},
	"max-width":                   MaxWidth{},
	"media":                       Media{},
	"max-block-size":              MaxBlockSize{},
	"max-inline-size":             MaxInlineSize{},
	"min-block-size":              MinBlockSize{},
	"min-inline-size":             MinInlineSize{},
	"min-height":                  MinHeight{},
	"min-width":                   MinWidth{},
	"mix-blend-mode":              MixBlendMode{},
	"object-fit":                  ObjectFit{},
	"object-position":             ObjectPosition{},
	"offset":                      Offset{},
	"offset-anchor":               OffsetAnchor{},
	"offset-distance":             OffsetDistance{},
	"offset-path":                 OffsetPath{},
	"offset-rotate":               OffsetRotate{},
	"opacity":                     Opacity{},
	"order":                       Order{},
	"orphans":                     Orphans{},
	"outline":                     Outline{},
	"outline-color":               OutlineColor{},
	"outline-offset":              OutlineOffset{},
	"outline-style":               OutlineStyle{},
	"outline-width":               OutlineWidth{},
	"overflow":                    Overflow{},
	"overflow-anchor":             OverflowAnchor{},
	"overflow-wrap":               OverflowWrap{},
	"overflow-x":                  OverflowX{},
	"overflow-y":                  OverflowY{},
	"overscroll-behavior":         OverscrollBehavior{},
	"overscroll-behavior-block":   OverscrollBehaviorBlock{},
	"overscroll-behavior-inline":  OverscrollBehaviorInline{},
	"overscroll-behavior-x":       OverscrollBehaviorX{},
	"overscroll-behavior-y":       OverscrollBehaviorY{},
	"padding":                     Padding{},
	"padding-block":               PaddingBlock{},
	"padding-block-end":           PaddingBlockEnd{},
	"padding-block-start":         PaddingBlockStart{},
	"padding-bottom":              PaddingBottom{},
	"padding-inline":              PaddingInline{},
	"padding-inline-end":          PaddingInlineEnd{},
	"padding-inline-start":        PaddingInlineStart{},
	"padding-left":                PaddingLeft{},
	"padding-right":               PaddingRight{},
	"padding-top":                 PaddingTop{},
	"page-break-after":            PageBreakAfter{},
	"page-break-before":           PageBreakBefore{},
	"page-break-inside":           PageBreakInside{},
	"paint-order":                 PaintOrder{},
	"perspective":                 Perspective{},
	"perspective-origin":          PerspectiveOrigin{},
	"place-content":               PlaceContent{},
	"place-items":                 PlaceItems{},
	"place-self":                  PlaceSelf{},
	"pointer-events":              PointerEvents{},
	"position":                    Position{},
	"quotes":                      Quotes{},
	"resize":                      Resize{},
	"right":                       Right{},
	"rotate":                      Rotate{},
	"row-gap":                     RowGap{},
	"scale":                       Scale{},
	"scroll-behavior":             ScrollBehavior{},
	"scroll-margin":               ScrollMargin{},
	"scroll-margin-block":         ScrollMarginBlock{},
	"scroll-margin-block-end":     ScrollMarginBlockEnd{},
	"scroll-margin-block-start":   ScrollMarginBlockStart{},
	"scroll-margin-bottom":        ScrollMarginBottom{},
	"scroll-margin-inline":        ScrollMarginInline{},
	"scroll-margin-inline-end":    ScrollMarginInlineEnd{},
	"scroll-margin-inline-start":  ScrollMarginInlineStart{},
	"scroll-margin-left":          ScrollMarginLeft{},
	"scroll-margin-right":         ScrollMarginRight{},
	"scroll-margin-top":           ScrollMarginTop{},
	"scroll-padding":              ScrollPadding{},
	"scroll-padding-block":        ScrollPaddingBlock{},
	"scroll-padding-block-end":    ScrollPaddingBlockEnd{},
	"scroll-padding-block-start":  ScrollPaddingBlockStart{},
	"scroll-padding-bottom":       ScrollPaddingBottom{},
	"scroll-padding-inline":       ScrollPaddingInline{},
	"scroll-padding-inline-end":   ScrollPaddingInlineEnd{},
	"scroll-padding-inline-start": ScrollPaddingInlineStart{},
	"scroll-padding-left":         ScrollPaddingLeft{},
	"scroll-padding-right":        ScrollPaddingRight{},
	"scroll-padding-top":          ScrollPaddingTop{},
	"scroll-snap-align":           ScrollSnapAlign{},
	"scroll-snap-stop":            ScrollSnapStop{},
	"scroll-snap-type":            ScrollSnapType{},
	"scrollbar-color":             ScrollbarColor{},
	"tab-size":                    TabSize{},
	"table-layout":                TableLayout{},
	"text-align":                  TextAlign{},
	"text-align-last":             TextAlignLast{},
	"text-combine-upright":        TextCombineUpright{},
	"text-decoration":             TextDecoration{},
	"text-decoration-color":       TextDecorationColor{},
	"text-decoration-line":        TextDecorationLine{},
	"text-decoration-style":       TextDecorationStyle{},
	"text-decoration-thickness":   TextDecorationThickness{},
	"text-emphasis":               TextEmphasis{},
	"text-indent":                 TextIndent{},
	"text-justify":                TextJustify{},
	"text-orientation":            TextOrientation{},
	"text-overflow":               TextOverflow{},
	"text-shadow":                 TextShadow{},
	"text-transform":              TextTransform{},
	"text-underline-position":     TextUnderlinePosition{},
	"top":                         Top{},
	"transform":                   Transform{},
	"transform-origin":            TransformOrigin{},
	"transform-style":             TransformStyle{},
	"transition":                  Transition{},
	"transition-delay":            TransitionDelay{},
	"transition-duration":         TransitionDuration{},
	"transition-property":         TransitionProperty{},
	"transition-timing-function":  TransitionTimingFunction{},
	"translate":                   Translate{},
	"unicode-bidi":                UnicodeBidi{},
	"user-select":                 UserSelect{},
	"vertical-align":              VerticalAlign{},
	"visibility":                  Visibility{},
	"white-space":                 WhiteSpace{},
	"widows":                      Widows{},
	"width":                       Width{},
	"word-break":                  WordBreak{},
	"word-spacing":                WordSpacing{},
	"word-wrap":                   WordWrap{},
	"writing-mode":                WritingMode{},
	"z-index":                     ZIndex{},
}

TYPES

type AccentColor struct{ PropertyBase }
    Specifies an accent color for user-interface controls

func (p AccentColor) Key() string

func (p AccentColor) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type AlignContent struct{ PropertyBase }
    Specifies the alignment between the lines inside a flexible container when
    the items do not use all available space

func (p AlignContent) Key() string

func (p AlignContent) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type AlignItems struct{ PropertyBase }
    Specifies the alignment for items inside a flexible container

func (p AlignItems) Key() string

func (p AlignItems) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type AlignSelf struct{ PropertyBase }
    Specifies the alignment for selected items inside a flexible container

func (p AlignSelf) Key() string

func (p AlignSelf) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type All struct{ PropertyBase }
    Resets all properties (except unicode-bidi and direction)

func (p All) Key() string

func (p All) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type Animation struct{ PropertyBase }
    A shorthand property for all the animation-* properties

func (p Animation) Key() string

func (p Animation) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type AnimationDelay struct{ PropertyBase }
    Specifies a delay for the start of an animation

func (p AnimationDelay) Key() string

func (p AnimationDelay) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type AnimationDirection struct{ PropertyBase }
    Specifies whether an animation should be played forwards, backwards or in
    alternate cycles

func (p AnimationDirection) Key() string

func (p AnimationDirection) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type AnimationDuration struct{ PropertyBase }
    Specifies how long an animation should take to complete one cycle

func (p AnimationDuration) Key() string

func (p AnimationDuration) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type AnimationFillMode struct{ PropertyBase }
    Specifies a style for the element when the animation is not playing (before
    it starts, after it ends, or both)

func (p AnimationFillMode) Key() string

func (p AnimationFillMode) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type AnimationIterationCount struct{ PropertyBase }
    Specifies the number of times an animation should be played

func (p AnimationIterationCount) Key() string

func (p AnimationIterationCount) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type AnimationName struct{ PropertyBase }
    Specifies a name for the @keyframes animation

func (p AnimationName) Key() string

func (p AnimationName) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type AnimationPlayState struct{ PropertyBase }
    Specifies whether the animation is running or paused

func (p AnimationPlayState) Key() string

func (p AnimationPlayState) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type AnimationTimingFunction struct{ PropertyBase }
    Specifies the speed curve of an animation

func (p AnimationTimingFunction) Key() string

func (p AnimationTimingFunction) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type AspectRatio struct{ PropertyBase }
    Specifies preferred aspect ratio of an element

func (p AspectRatio) Key() string

func (p AspectRatio) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type BackdropFilter struct{ PropertyBase }
    Defines a graphical effect to the area behind an element

func (p BackdropFilter) Key() string

func (p BackdropFilter) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type BackfaceVisibility struct{ PropertyBase }
    Defines whether or not the back face of an element should be visible when
    facing the user

func (p BackfaceVisibility) Key() string

func (p BackfaceVisibility) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type Background struct{ PropertyBase }
    A shorthand property for all the background-* properties

func (p Background) Key() string

func (p Background) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type BackgroundAttachment struct{ PropertyBase }
    Sets whether a background image scrolls with the rest of the page, or is
    fixed

func (p BackgroundAttachment) Key() string

func (p BackgroundAttachment) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type BackgroundBlendMode struct{ PropertyBase }
    Specifies the blending mode of each background layer (color/image)

func (p BackgroundBlendMode) Key() string

func (p BackgroundBlendMode) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type BackgroundClip struct{ PropertyBase }
    Defines how far the background (color or image) should extend within an
    element

func (p BackgroundClip) Key() string

func (p BackgroundClip) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type BackgroundColor struct{ PropertyBase }
    Specifies the background color of an element

func (p BackgroundColor) Key() string

func (p BackgroundColor) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type BackgroundImage struct{ PropertyBase }
    Specifies one or more background images for an element

func (p BackgroundImage) Key() string

func (p BackgroundImage) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type BackgroundOrigin struct{ PropertyBase }
    Specifies the origin position of a background image

func (p BackgroundOrigin) Key() string

func (p BackgroundOrigin) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type BackgroundPosition struct{ PropertyBase }
    Specifies the position of a background image

func (p BackgroundPosition) Key() string

func (p BackgroundPosition) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type BackgroundPositionX struct{ PropertyBase }
    Specifies the position of a background image on x-axis

func (p BackgroundPositionX) Key() string

func (p BackgroundPositionX) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type BackgroundPositionY struct{ PropertyBase }
    Specifies the position of a background image on y-axis

func (p BackgroundPositionY) Key() string

func (p BackgroundPositionY) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type BackgroundRepeat struct{ PropertyBase }
    Sets if/how a background image will be repeated

func (p BackgroundRepeat) Key() string

func (p BackgroundRepeat) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type BackgroundSize struct{ PropertyBase }
    Specifies the size of the background images

func (p BackgroundSize) Key() string

func (p BackgroundSize) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type BlockSize struct{ PropertyBase }
    Specifies the size of an element in block direction

func (p BlockSize) Key() string

func (p BlockSize) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type Border struct{ PropertyBase }
    A shorthand property for border-width, border-style and border-color

func (p Border) Key() string

func (Border) Preprocess(values []rules.PropertyValue, rules []rules.Rule) ([]rules.PropertyValue, []rules.Rule)

func (Border) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error
    border-width border-style border-color|initial|inherit

func (p Border) Sort() int

type BorderBlock struct{ PropertyBase }
    A shorthand property for border-block-width, border-block-style and
    border-block-color

func (p BorderBlock) Key() string

func (p BorderBlock) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

func (p BorderBlock) Sort() int

type BorderBlockColor struct{ PropertyBase }
    Sets the color of the borders at start and end in the block direction

func (p BorderBlockColor) Key() string

func (p BorderBlockColor) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

func (p BorderBlockColor) Sort() int

type BorderBlockEndColor struct{ PropertyBase }
    Sets the color of the border at the end in the block direction

func (p BorderBlockEndColor) Key() string

func (p BorderBlockEndColor) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

func (p BorderBlockEndColor) Sort() int

type BorderBlockEndStyle struct{ PropertyBase }
    Sets the style of the border at the end in the block direction

func (p BorderBlockEndStyle) Key() string

func (p BorderBlockEndStyle) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

func (p BorderBlockEndStyle) Sort() int

type BorderBlockEndWidth struct{ PropertyBase }
    Sets the width of the border at the end in the block direction

func (p BorderBlockEndWidth) Key() string

func (p BorderBlockEndWidth) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

func (p BorderBlockEndWidth) Sort() int

type BorderBlockStartColor struct{ PropertyBase }
    Sets the color of the border at the start in the block direction

func (p BorderBlockStartColor) Key() string

func (p BorderBlockStartColor) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

func (p BorderBlockStartColor) Sort() int

type BorderBlockStartStyle struct{ PropertyBase }
    Sets the style of the border at the start in the block direction

func (p BorderBlockStartStyle) Key() string

func (p BorderBlockStartStyle) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

func (p BorderBlockStartStyle) Sort() int

type BorderBlockStartWidth struct{ PropertyBase }
    Sets the width of the border at the start in the block direction

func (p BorderBlockStartWidth) Key() string

func (p BorderBlockStartWidth) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

func (p BorderBlockStartWidth) Sort() int

type BorderBlockStyle struct{ PropertyBase }
    Sets the style of the borders at start and end in the block direction

func (p BorderBlockStyle) Key() string

func (p BorderBlockStyle) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

func (p BorderBlockStyle) Sort() int

type BorderBlockWidth struct{ PropertyBase }
    Sets the width of the borders at start and end in the block direction

func (p BorderBlockWidth) Key() string

func (p BorderBlockWidth) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

func (p BorderBlockWidth) Sort() int

type BorderBottom struct{ PropertyBase }
    A shorthand property for border-bottom-width, border-bottom-style and
    border-bottom-color

func (p BorderBottom) Key() string

func (BorderBottom) Preprocess(values []rules.PropertyValue, rules []rules.Rule) ([]rules.PropertyValue, []rules.Rule)

func (BorderBottom) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error
    border-width border-style border-color|initial|inherit

func (p BorderBottom) Sort() int

type BorderBottomColor struct{ PropertyBase }
    Sets the color of the bottom border

func (p BorderBottomColor) Key() string

func (p BorderBottomColor) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error
    color|transparent|initial|inherit

func (p BorderBottomColor) Sort() int

type BorderBottomLeftRadius struct{ PropertyBase }
    Defines the radius of the border of the bottom-left corner

func (p BorderBottomLeftRadius) Key() string

func (p BorderBottomLeftRadius) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

func (p BorderBottomLeftRadius) Sort() int

type BorderBottomRightRadius struct{ PropertyBase }
    Defines the radius of the border of the bottom-right corner

func (p BorderBottomRightRadius) Key() string

func (p BorderBottomRightRadius) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

func (p BorderBottomRightRadius) Sort() int

type BorderBottomStyle struct{ PropertyBase }
    Sets the style of the bottom border

func (p BorderBottomStyle) Key() string

func (p BorderBottomStyle) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error
    none|hidden|dotted|dashed|solid|double|groove|ridge|inset|outset|initial|inherit

func (p BorderBottomStyle) Sort() int

type BorderBottomWidth struct{ PropertyBase }
    Sets the width of the bottom border

func (p BorderBottomWidth) Key() string

func (p BorderBottomWidth) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error
    medium|thin|thick|length|initial|inherit

func (p BorderBottomWidth) Sort() int

type BorderCollapse struct{ PropertyBase }
    Sets whether table borders should collapse into a single border or be
    separated

func (p BorderCollapse) Key() string

func (p BorderCollapse) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

func (p BorderCollapse) Sort() int

type BorderColor struct{ PropertyBase }
    Sets the color of the four borders

func (p BorderColor) Key() string

func (p BorderColor) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

func (p BorderColor) Sort() int

type BorderImage struct{ PropertyBase }
    A shorthand property for all the border-image-* properties

func (p BorderImage) Key() string

func (p BorderImage) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

func (p BorderImage) Sort() int

type BorderImageOutset struct{ PropertyBase }
    Specifies the amount by which the border image area extends beyond the
    border box

func (p BorderImageOutset) Key() string

func (p BorderImageOutset) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

func (p BorderImageOutset) Sort() int

type BorderImageRepeat struct{ PropertyBase }
    Specifies whether the border image should be repeated, rounded or stretched

func (p BorderImageRepeat) Key() string

func (p BorderImageRepeat) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

func (p BorderImageRepeat) Sort() int

type BorderImageSlice struct{ PropertyBase }
    Specifies how to slice the border image

func (p BorderImageSlice) Key() string

func (p BorderImageSlice) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

func (p BorderImageSlice) Sort() int

type BorderImageSource struct{ PropertyBase }
    Specifies the path to the image to be used as a border

func (p BorderImageSource) Key() string

func (p BorderImageSource) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

func (p BorderImageSource) Sort() int

type BorderImageWidth struct{ PropertyBase }
    Specifies the width of the border image

func (p BorderImageWidth) Key() string

func (p BorderImageWidth) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

func (p BorderImageWidth) Sort() int

type BorderInline struct{ PropertyBase }
    A shorthand property for border-inline-width, border-inline-style and
    border-inline-color

func (p BorderInline) Key() string

func (p BorderInline) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

func (p BorderInline) Sort() int

type BorderInlineColor struct{ PropertyBase }
    Sets the color of the borders at start and end in the inline direction

func (p BorderInlineColor) Key() string

func (p BorderInlineColor) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

func (p BorderInlineColor) Sort() int

type BorderInlineEndColor struct{ PropertyBase }
    Sets the color of the border at the end in the inline direction

func (p BorderInlineEndColor) Key() string

func (p BorderInlineEndColor) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

func (p BorderInlineEndColor) Sort() int

type BorderInlineEndStyle struct{ PropertyBase }
    Sets the style of the border at the end in the inline direction

func (p BorderInlineEndStyle) Key() string

func (p BorderInlineEndStyle) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

func (p BorderInlineEndStyle) Sort() int

type BorderInlineEndWidth struct{ PropertyBase }
    Sets the width of the border at the end in the inline direction

func (p BorderInlineEndWidth) Key() string

func (p BorderInlineEndWidth) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

func (p BorderInlineEndWidth) Sort() int

type BorderInlineStartColor struct{ PropertyBase }
    Sets the color of the border at the start in the inline direction

func (p BorderInlineStartColor) Key() string

func (p BorderInlineStartColor) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

func (p BorderInlineStartColor) Sort() int

type BorderInlineStartStyle struct{ PropertyBase }
    Sets the style of the border at the start in the inline direction

func (p BorderInlineStartStyle) Key() string

func (p BorderInlineStartStyle) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

func (p BorderInlineStartStyle) Sort() int

type BorderInlineStartWidth struct{ PropertyBase }
    Sets the width of the border at the start in the inline direction

func (p BorderInlineStartWidth) Key() string

func (p BorderInlineStartWidth) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

func (p BorderInlineStartWidth) Sort() int

type BorderInlineStyle struct{ PropertyBase }
    Sets the style of the borders at start and end in the inline direction

func (p BorderInlineStyle) Key() string

func (p BorderInlineStyle) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

func (p BorderInlineStyle) Sort() int

type BorderInlineWidth struct{ PropertyBase }
    Sets the width of the borders at start and end in the inline direction

func (p BorderInlineWidth) Key() string

func (p BorderInlineWidth) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

func (p BorderInlineWidth) Sort() int

type BorderLeft struct{ PropertyBase }
    A shorthand property for all the border-left-* properties

func (p BorderLeft) Key() string

func (BorderLeft) Preprocess(values []rules.PropertyValue, rules []rules.Rule) ([]rules.PropertyValue, []rules.Rule)

func (BorderLeft) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error
    border-width border-style border-color|initial|inherit

func (p BorderLeft) Sort() int

type BorderLeftColor struct{ PropertyBase }
    Sets the color of the left border

func (p BorderLeftColor) Key() string

func (p BorderLeftColor) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error
    color|transparent|initial|inherit

func (p BorderLeftColor) Sort() int

type BorderLeftStyle struct{ PropertyBase }
    Sets the style of the left border

func (p BorderLeftStyle) Key() string

func (p BorderLeftStyle) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error
    none|hidden|dotted|dashed|solid|double|groove|ridge|inset|outset|initial|inherit

func (p BorderLeftStyle) Sort() int

type BorderLeftWidth struct{ PropertyBase }
    Sets the width of the left border

func (p BorderLeftWidth) Key() string

func (p BorderLeftWidth) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error
    medium|thin|thick|length|initial|inherit

func (p BorderLeftWidth) Sort() int

type BorderRadius struct{ PropertyBase }
    A shorthand property for the four border-*-radius properties

func (p BorderRadius) Key() string

func (p BorderRadius) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

func (p BorderRadius) Sort() int

type BorderRight struct{ PropertyBase }
    A shorthand property for all the border-right-* properties

func (p BorderRight) Key() string

func (BorderRight) Preprocess(values []rules.PropertyValue, rules []rules.Rule) ([]rules.PropertyValue, []rules.Rule)

func (BorderRight) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error
    border-width border-style border-color|initial|inherit

func (p BorderRight) Sort() int

type BorderRightColor struct{ PropertyBase }
    Sets the color of the right border

func (p BorderRightColor) Key() string

func (p BorderRightColor) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error
    color|transparent|initial|inherit

func (p BorderRightColor) Sort() int

type BorderRightStyle struct{ PropertyBase }
    Sets the style of the right border

func (p BorderRightStyle) Key() string

func (p BorderRightStyle) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error
    none|hidden|dotted|dashed|solid|double|groove|ridge|inset|outset|initial|inherit

func (p BorderRightStyle) Sort() int

type BorderRightWidth struct{ PropertyBase }
    Sets the width of the right border

func (p BorderRightWidth) Key() string

func (p BorderRightWidth) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error
    medium|thin|thick|length|initial|inherit

func (p BorderRightWidth) Sort() int

type BorderSpacing struct{ PropertyBase }
    Sets the distance between the borders of adjacent cells

func (p BorderSpacing) Key() string

func (p BorderSpacing) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

func (p BorderSpacing) Sort() int

type BorderStyle struct{ PropertyBase }
    Sets the style of the four borders

func (p BorderStyle) Key() string

func (p BorderStyle) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error
    none|hidden|dotted|dashed|solid|double|groove|ridge|inset|outset|initial|inherit

func (p BorderStyle) Sort() int

type BorderTop struct{ PropertyBase }
    A shorthand property for border-top-width, border-top-style and
    border-top-color

func (p BorderTop) Key() string

func (BorderTop) Preprocess(values []rules.PropertyValue, rules []rules.Rule) ([]rules.PropertyValue, []rules.Rule)

func (BorderTop) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error
    border-width border-style border-color|initial|inherit

func (p BorderTop) Sort() int

type BorderTopColor struct{ PropertyBase }
    Sets the color of the top border

func (p BorderTopColor) Key() string

func (p BorderTopColor) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error
    color|transparent|initial|inherit

func (p BorderTopColor) Sort() int

type BorderTopLeftRadius struct{ PropertyBase }
    Defines the radius of the border of the top-left corner

func (p BorderTopLeftRadius) Key() string

func (p BorderTopLeftRadius) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

func (p BorderTopLeftRadius) Sort() int

type BorderTopRightRadius struct{ PropertyBase }
    Defines the radius of the border of the top-right corner

func (p BorderTopRightRadius) Key() string

func (p BorderTopRightRadius) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

func (p BorderTopRightRadius) Sort() int

type BorderTopStyle struct{ PropertyBase }
    Sets the style of the top border

func (p BorderTopStyle) Key() string

func (p BorderTopStyle) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error
    none|hidden|dotted|dashed|solid|double|groove|ridge|inset|outset|initial|inherit

func (p BorderTopStyle) Sort() int

type BorderTopWidth struct{ PropertyBase }
    Sets the width of the top border

func (p BorderTopWidth) Key() string

func (p BorderTopWidth) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error
    medium|thin|thick|length|initial|inherit

func (p BorderTopWidth) Sort() int

type BorderWidth struct{ PropertyBase }
    Sets the width of the four borders

func (p BorderWidth) Key() string

func (p BorderWidth) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

func (p BorderWidth) Sort() int

type Bottom struct{ PropertyBase }
    Sets the elements position, from the bottom of its parent element

func (p Bottom) Key() string

func (p Bottom) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error
    auto|length|initial|inherit

type BoxDecorationBreak struct{ PropertyBase }
    Sets the behavior of the background and border of an element at page-break,
    or, for in-line elements, at line-break.

func (p BoxDecorationBreak) Key() string

func (p BoxDecorationBreak) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type BoxReflect struct{ PropertyBase }
    The box-reflect property is used to create a reflection of an element.

func (p BoxReflect) Key() string

func (p BoxReflect) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type BoxShadow struct{ PropertyBase }
    Attaches one or more shadows to an element

func (p BoxShadow) Key() string

func (p BoxShadow) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type BoxSizing struct{ PropertyBase }
    Defines how the width and height of an element are calculated: should they
    include padding and borders, or not

func (p BoxSizing) Key() string

func (p BoxSizing) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type BreakAfter struct{ PropertyBase }
    Specifies whether or not a page-, column-, or region-break should occur
    after the specified element

func (p BreakAfter) Key() string

func (p BreakAfter) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type BreakBefore struct{ PropertyBase }
    Specifies whether or not a page-, column-, or region-break should occur
    before the specified element

func (p BreakBefore) Key() string

func (p BreakBefore) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type BreakInside struct{ PropertyBase }
    Specifies whether or not a page-, column-, or region-break should occur
    inside the specified element

func (p BreakInside) Key() string

func (p BreakInside) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type CaptionSide struct{ PropertyBase }
    Specifies the placement of a table caption

func (p CaptionSide) Key() string

func (p CaptionSide) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type CaretColor struct{ PropertyBase }
    Specifies the color of the cursor (caret) in inputs, textareas, or any
    element that is editable

func (p CaretColor) Key() string

func (p CaretColor) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type Charset struct{ PropertyBase }
    Specifies the character encoding used in the style sheet

func (p Charset) Key() string

func (p Charset) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type Clear struct{ PropertyBase }
    Specifies what should happen with the element that is next to a floating
    element

func (p Clear) Key() string

func (p Clear) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type Clip struct{ PropertyBase }
    Clips an absolutely positioned element

func (p Clip) Key() string

func (p Clip) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type Color struct{ PropertyBase }
    Sets the color of text

func (p Color) Key() string

func (p Color) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type ColumnCount struct{ PropertyBase }
    Specifies the number of columns an element should be divided into

func (p ColumnCount) Key() string

func (p ColumnCount) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type ColumnFill struct{ PropertyBase }
    Specifies how to fill columns, balanced or not

func (p ColumnFill) Key() string

func (p ColumnFill) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type ColumnGap struct{ PropertyBase }
    Specifies the gap between the columns

func (p ColumnGap) Key() string

func (p ColumnGap) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type ColumnRule struct{ PropertyBase }
    A shorthand property for all the column-rule-* properties

func (p ColumnRule) Key() string

func (p ColumnRule) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type ColumnRuleColor struct{ PropertyBase }
    Specifies the color of the rule between columns

func (p ColumnRuleColor) Key() string

func (p ColumnRuleColor) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type ColumnRuleStyle struct{ PropertyBase }
    Specifies the style of the rule between columns

func (p ColumnRuleStyle) Key() string

func (p ColumnRuleStyle) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type ColumnRuleWidth struct{ PropertyBase }
    Specifies the width of the rule between columns

func (p ColumnRuleWidth) Key() string

func (p ColumnRuleWidth) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type ColumnSpan struct{ PropertyBase }
    Specifies how many columns an element should span across

func (p ColumnSpan) Key() string

func (p ColumnSpan) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type ColumnWidth struct{ PropertyBase }
    Specifies the column width

func (p ColumnWidth) Key() string

func (p ColumnWidth) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type Columns struct{ PropertyBase }
    A shorthand property for column-width and column-count

func (p Columns) Key() string

func (p Columns) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type Content struct{ PropertyBase }
    Used with the :before and :after pseudo-elements, to insert generated
    content

func (p Content) Key() string

func (p Content) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type CounterIncrement struct{ PropertyBase }
    Increases or decreases the value of one or more CSS counters

func (p CounterIncrement) Key() string

func (p CounterIncrement) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type CounterReset struct{ PropertyBase }
    Creates or resets one or more CSS counters

func (p CounterReset) Key() string

func (p CounterReset) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type Cursor struct{ PropertyBase }
    Specifies the mouse cursor to be displayed when pointing over an element

func (p Cursor) Key() string

func (p Cursor) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type Direction struct{ PropertyBase }
    Specifies the text direction/writing direction

func (p Direction) Key() string

func (p Direction) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type Display struct{ PropertyBase }
    Specifies how a certain HTML element should be displayed

func (p Display) Key() string

func (p Display) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error
    block|inline|inline-block|flex|inline-flex|grid|inline-grid|flow-root|none|contents|block
    flex|block flow|block flow-root|block grid|inline
    flex|inline flow|inline flow-root|inline
    grid|table|table-row|list-item|inherit|initial|revert|revert-layer|unset

type EmptyCells struct{ PropertyBase }
    Specifies whether or not to display borders and background on empty cells in
    a table

func (p EmptyCells) Key() string

func (p EmptyCells) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type Filter struct{ PropertyBase }
    Defines effects (e.g. blurring or color shifting) on an element before the
    element is displayed

func (p Filter) Key() string

func (p Filter) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type Flex struct{ PropertyBase }
    A shorthand property for the flex-grow, flex-shrink, and the flex-basis
    properties

func (p Flex) Key() string

func (p Flex) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type FlexBasis struct{ PropertyBase }
    Specifies the initial length of a flexible item

func (p FlexBasis) Key() string

func (p FlexBasis) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type FlexDirection struct{ PropertyBase }
    Specifies the direction of the flexible items

func (p FlexDirection) Key() string

func (p FlexDirection) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type FlexFlow struct{ PropertyBase }
    A shorthand property for the flex-direction and the flex-wrap properties

func (p FlexFlow) Key() string

func (p FlexFlow) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type FlexGrow struct{ PropertyBase }
    Specifies how much the item will grow relative to the rest

func (p FlexGrow) Key() string

func (p FlexGrow) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type FlexShrink struct{ PropertyBase }
    Specifies how the item will shrink relative to the rest

func (p FlexShrink) Key() string

func (p FlexShrink) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type FlexWrap struct{ PropertyBase }
    Specifies whether the flexible items should wrap or not

func (p FlexWrap) Key() string

func (p FlexWrap) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type Float struct{ PropertyBase }
    Specifies whether an element should float to the left, right, or not at all

func (p Float) Key() string

func (p Float) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type Font struct{ PropertyBase }
    A shorthand property for the font-style, font-variant, font-weight,
    font-size/line-height, and the font-family properties

func (p Font) Key() string

func (p Font) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type FontFace struct{ PropertyBase }
    A rule that allows websites to download and use fonts other than the
    "web-safe" fonts

func (p FontFace) Key() string

func (p FontFace) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type FontFamily struct{ PropertyBase }
    Specifies the font family for text

func (p FontFamily) Key() string

func (p FontFamily) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type FontFeatureSettings struct{ PropertyBase }
    Allows control over advanced typographic features in OpenType fonts

func (p FontFeatureSettings) Key() string

func (p FontFeatureSettings) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type FontFeatureValues struct{ PropertyBase }
    Allows authors to use a common name in font-variant-alternate for feature
    activated differently in OpenType

func (p FontFeatureValues) Key() string

func (p FontFeatureValues) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type FontKerning struct{ PropertyBase }
    Controls the usage of the kerning information (how letters are spaced)

func (p FontKerning) Key() string

func (p FontKerning) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type FontLanguageOverride struct{ PropertyBase }
    Controls the usage of language-specific glyphs in a typeface

func (p FontLanguageOverride) Key() string

func (p FontLanguageOverride) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type FontSize struct{ PropertyBase }
    Specifies the font size of text

func (p FontSize) Key() string

func (p FontSize) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type FontSizeAdjust struct{ PropertyBase }
    Preserves the readability of text when font fallback occurs

func (p FontSizeAdjust) Key() string

func (p FontSizeAdjust) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type FontStretch struct{ PropertyBase }
    Selects a normal, condensed, or expanded face from a font family

func (p FontStretch) Key() string

func (p FontStretch) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type FontStyle struct{ PropertyBase }
    Specifies the font style for text

func (p FontStyle) Key() string

func (p FontStyle) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error
    normal|italic|oblique|initial|inherit

type FontSynthesis struct{ PropertyBase }
    Controls which missing typefaces (bold or italic) may be synthesized by the
    browser

func (p FontSynthesis) Key() string

func (p FontSynthesis) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type FontVariant struct{ PropertyBase }
    Specifies whether or not a text should be displayed in a small-caps font

func (p FontVariant) Key() string

func (p FontVariant) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type FontVariantAlternates struct{ PropertyBase }
    Controls the usage of alternate glyphs associated to alternative names
    defined in @font-feature-values

func (p FontVariantAlternates) Key() string

func (p FontVariantAlternates) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type FontVariantCaps struct{ PropertyBase }
    Controls the usage of alternate glyphs for capital letters

func (p FontVariantCaps) Key() string

func (p FontVariantCaps) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type FontVariantEastAsian struct{ PropertyBase }
    Controls the usage of alternate glyphs for East Asian scripts (e.g Japanese
    and Chinese)

func (p FontVariantEastAsian) Key() string

func (p FontVariantEastAsian) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type FontVariantLigatures struct{ PropertyBase }
    Controls which ligatures and contextual forms are used in textual content of
    the elements it applies to

func (p FontVariantLigatures) Key() string

func (p FontVariantLigatures) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type FontVariantNumeric struct{ PropertyBase }
    Controls the usage of alternate glyphs for numbers, fractions, and ordinal
    markers

func (p FontVariantNumeric) Key() string

func (p FontVariantNumeric) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type FontVariantPosition struct{ PropertyBase }
    Controls the usage of alternate glyphs of smaller size positioned as
    superscript or subscript regarding the baseline of the font

func (p FontVariantPosition) Key() string

func (p FontVariantPosition) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type FontWeight struct{ PropertyBase }
    Specifies the weight of a font

func (p FontWeight) Key() string

func (p FontWeight) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error
    normal|bold|bolder|lighter|number|initial|inherit

type Gap struct{ PropertyBase }
    A shorthand property for the row-gap and the column-gap properties

func (p Gap) Key() string

func (p Gap) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type Grid struct{ PropertyBase }
    A shorthand property for the grid-template-rows, grid-template-columns,
    grid-template-areas, grid-auto-rows, grid-auto-columns, and the
    grid-auto-flow properties

func (p Grid) Key() string

func (p Grid) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type GridArea struct{ PropertyBase }
    Either specifies a name for the grid item, or this property is a shorthand
    property for the grid-row-start, grid-column-start, grid-row-end, and
    grid-column-end properties

func (p GridArea) Key() string

func (p GridArea) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type GridAutoColumns struct{ PropertyBase }
    Specifies a default column size

func (p GridAutoColumns) Key() string

func (p GridAutoColumns) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type GridAutoFlow struct{ PropertyBase }
    Specifies how auto-placed items are inserted in the grid

func (p GridAutoFlow) Key() string

func (p GridAutoFlow) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type GridAutoRows struct{ PropertyBase }
    Specifies a default row size

func (p GridAutoRows) Key() string

func (p GridAutoRows) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type GridColumn struct{ PropertyBase }
    A shorthand property for the grid-column-start and the grid-column-end
    properties

func (p GridColumn) Key() string

func (p GridColumn) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type GridColumnEnd struct{ PropertyBase }
    Specifies where to end the grid item

func (p GridColumnEnd) Key() string

func (p GridColumnEnd) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type GridColumnGap struct{ PropertyBase }
    Specifies the size of the gap between columns

func (p GridColumnGap) Key() string

func (p GridColumnGap) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type GridColumnStart struct{ PropertyBase }
    Specifies where to start the grid item

func (p GridColumnStart) Key() string

func (p GridColumnStart) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type GridGap struct{ PropertyBase }
    A shorthand property for the grid-row-gap and grid-column-gap properties

func (p GridGap) Key() string

func (p GridGap) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type GridRow struct{ PropertyBase }
    A shorthand property for the grid-row-start and the grid-row-end properties

func (p GridRow) Key() string

func (p GridRow) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type GridRowEnd struct{ PropertyBase }
    Specifies where to end the grid item

func (p GridRowEnd) Key() string

func (p GridRowEnd) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type GridRowGap struct{ PropertyBase }
    Specifies the size of the gap between rows

func (p GridRowGap) Key() string

func (p GridRowGap) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type GridRowStart struct{ PropertyBase }
    Specifies where to start the grid item

func (p GridRowStart) Key() string

func (p GridRowStart) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type GridTemplate struct{ PropertyBase }
    A shorthand property for the grid-template-rows, grid-template-columns and
    grid-areas properties

func (p GridTemplate) Key() string

func (p GridTemplate) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type GridTemplateAreas struct{ PropertyBase }
    Specifies how to display columns and rows, using named grid items

func (p GridTemplateAreas) Key() string

func (p GridTemplateAreas) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type GridTemplateColumns struct{ PropertyBase }
    Specifies the size of the columns, and how many columns in a grid layout

func (p GridTemplateColumns) Key() string

func (p GridTemplateColumns) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type GridTemplateRows struct{ PropertyBase }
    Specifies the size of the rows in a grid layout

func (p GridTemplateRows) Key() string

func (p GridTemplateRows) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type HangingPunctuation struct{ PropertyBase }
    Specifies whether a punctuation character may be placed outside the line box

func (p HangingPunctuation) Key() string

func (p HangingPunctuation) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type Height struct{ PropertyBase }
    Sets the height of an element

func (p Height) Key() string

func (p Height) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type Hyphens struct{ PropertyBase }
    Sets how to split words to improve the layout of paragraphs

func (p Hyphens) Key() string

func (p Hyphens) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type ImageRendering struct{ PropertyBase }
    Specifies the type of algorithm to use for image scaling

func (p ImageRendering) Key() string

func (p ImageRendering) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type Import struct{ PropertyBase }
    Allows you to import a style sheet into another style sheet

func (p Import) Key() string

func (p Import) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type InlineSize struct{ PropertyBase }
    Specifies the size of an element in the inline direction

func (p InlineSize) Key() string

func (p InlineSize) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type Inset struct{ PropertyBase }
    Specifies the distance between an element and the parent element

func (p Inset) Key() string

func (p Inset) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type InsetBlock struct{ PropertyBase }
    Specifies the distance between an element and the parent element in the
    block direction

func (p InsetBlock) Key() string

func (p InsetBlock) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type InsetBlockEnd struct{ PropertyBase }
    Specifies the distance between the end of an element and the parent element
    in the block direction

func (p InsetBlockEnd) Key() string

func (p InsetBlockEnd) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type InsetBlockStart struct{ PropertyBase }
    Specifies the distance between the start of an element and the parent
    element in the block direction

func (p InsetBlockStart) Key() string

func (p InsetBlockStart) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type InsetInline struct{ PropertyBase }
    Specifies the distance between an element and the parent element in the
    inline direction

func (p InsetInline) Key() string

func (p InsetInline) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type InsetInlineEnd struct{ PropertyBase }
    Specifies the distance between the end of an element and the parent element
    in the inline direction

func (p InsetInlineEnd) Key() string

func (p InsetInlineEnd) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type InsetInlineStart struct{ PropertyBase }
    Specifies the distance between the start of an element and the parent
    element in the inline direction

func (p InsetInlineStart) Key() string

func (p InsetInlineStart) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type Isolation struct{ PropertyBase }
    Defines whether an element must create a new stacking content

func (p Isolation) Key() string

func (p Isolation) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type JustifyContent struct{ PropertyBase }
    Specifies the alignment between the items inside a flexible container when
    the items do not use all available space

func (p JustifyContent) Key() string

func (p JustifyContent) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type JustifyItems struct{ PropertyBase }
    Is set on the grid container. Specifies the alignment of grid items in the
    inline direction

func (p JustifyItems) Key() string

func (p JustifyItems) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type JustifySelf struct{ PropertyBase }
    Is set on the grid item. Specifies the alignment of the grid item in the
    inline direction

func (p JustifySelf) Key() string

func (p JustifySelf) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type Keyframes struct{ PropertyBase }
    Specifies the animation code

func (p Keyframes) Key() string

func (p Keyframes) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type Left struct{ PropertyBase }
    Specifies the left position of a positioned element

func (p Left) Key() string

func (p Left) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error
    auto|length|initial|inherit

type LetterSpacing struct{ PropertyBase }
    Increases or decreases the space between characters in a text

func (p LetterSpacing) Key() string

func (p LetterSpacing) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type LineBreak struct{ PropertyBase }
    Specifies how/if to break lines

func (p LineBreak) Key() string

func (p LineBreak) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type LineHeight struct{ PropertyBase }
    Sets the line height

func (p LineHeight) Key() string

func (p LineHeight) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type ListStyle struct{ PropertyBase }
    Sets all the properties for a list in one declaration

func (p ListStyle) Key() string

func (p ListStyle) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type ListStyleImage struct{ PropertyBase }
    Specifies an image as the list-item marker

func (p ListStyleImage) Key() string

func (p ListStyleImage) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type ListStylePosition struct{ PropertyBase }
    Specifies the position of the list-item markers (bullet points)

func (p ListStylePosition) Key() string

func (p ListStylePosition) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type ListStyleType struct{ PropertyBase }
    Specifies the type of list-item marker

func (p ListStyleType) Key() string

func (p ListStyleType) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type Margin struct{ PropertyBase }
    Sets all the margin properties in one declaration

func (p Margin) Key() string

func (Margin) Preprocess(values []rules.PropertyValue, rules []rules.Rule) ([]rules.PropertyValue, []rules.Rule)

func (Margin) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type MarginBlock struct{ PropertyBase }
    Specifies the margin in the block direction

func (p MarginBlock) Key() string

func (p MarginBlock) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type MarginBlockEnd struct{ PropertyBase }
    Specifies the margin at the end in the block direction

func (p MarginBlockEnd) Key() string

func (p MarginBlockEnd) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type MarginBlockStart struct{ PropertyBase }
    Specifies the margin at the start in the block direction

func (p MarginBlockStart) Key() string

func (p MarginBlockStart) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type MarginBottom struct{ PropertyBase }
    Sets the bottom margin of an element

func (p MarginBottom) Key() string

func (MarginBottom) Preprocess(values []rules.PropertyValue, rules []rules.Rule) ([]rules.PropertyValue, []rules.Rule)

func (MarginBottom) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error
    length|auto|initial|inherit

type MarginInline struct{ PropertyBase }
    Specifies the margin in the inline direction

func (p MarginInline) Key() string

func (p MarginInline) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type MarginInlineEnd struct{ PropertyBase }
    Specifies the margin at the end in the inline direction

func (p MarginInlineEnd) Key() string

func (p MarginInlineEnd) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type MarginInlineStart struct{ PropertyBase }
    Specifies the margin at the start in the inline direction

func (p MarginInlineStart) Key() string

func (p MarginInlineStart) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type MarginLeft struct{ PropertyBase }
    Sets the left margin of an element

func (p MarginLeft) Key() string

func (MarginLeft) Preprocess(values []rules.PropertyValue, rules []rules.Rule) ([]rules.PropertyValue, []rules.Rule)

func (MarginLeft) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error
    length|auto|initial|inherit

type MarginRight struct{ PropertyBase }
    Sets the right margin of an element

func (p MarginRight) Key() string

func (MarginRight) Preprocess(values []rules.PropertyValue, rules []rules.Rule) ([]rules.PropertyValue, []rules.Rule)

func (MarginRight) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error
    length|auto|initial|inherit

type MarginTop struct{ PropertyBase }
    Sets the top margin of an element

func (p MarginTop) Key() string

func (MarginTop) Preprocess(values []rules.PropertyValue, rules []rules.Rule) ([]rules.PropertyValue, []rules.Rule)

func (MarginTop) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error
    length|auto|initial|inherit

type Mask struct{ PropertyBase }
    Hides parts of an element by masking or clipping an image at specific places

func (p Mask) Key() string

func (p Mask) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type MaskClip struct{ PropertyBase }
    Specifies the mask area

func (p MaskClip) Key() string

func (p MaskClip) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type MaskComposite struct{ PropertyBase }
    Represents a compositing operation used on the current mask layer with the
    mask layers below it

func (p MaskComposite) Key() string

func (p MaskComposite) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type MaskImage struct{ PropertyBase }
    Specifies an image to be used as a mask layer for an element

func (p MaskImage) Key() string

func (p MaskImage) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type MaskMode struct{ PropertyBase }
    Specifies whether the mask layer image is treated as a luminance mask or as
    an alpha mask

func (p MaskMode) Key() string

func (p MaskMode) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type MaskOrigin struct{ PropertyBase }
    Specifies the origin position (the mask position area) of a mask layer image

func (p MaskOrigin) Key() string

func (p MaskOrigin) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type MaskPosition struct{ PropertyBase }
    Sets the starting position of a mask layer image (relative to the mask
    position area)

func (p MaskPosition) Key() string

func (p MaskPosition) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type MaskRepeat struct{ PropertyBase }
    Specifies how the mask layer image is repeated

func (p MaskRepeat) Key() string

func (p MaskRepeat) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type MaskSize struct{ PropertyBase }
    Specifies the size of a mask layer image

func (p MaskSize) Key() string

func (p MaskSize) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type MaskType struct{ PropertyBase }
    Specifies whether an SVG <mask> element is treated as a luminance mask or as
    an alpha mask

func (p MaskType) Key() string

func (p MaskType) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type MaxBlockSize struct{ PropertyBase }
    Sets the maximum size of an element in the block direction

func (p MaxBlockSize) Key() string

func (p MaxBlockSize) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type MaxHeight struct{ PropertyBase }
    Sets the maximum height of an element

func (p MaxHeight) Key() string

func (p MaxHeight) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type MaxInlineSize struct{ PropertyBase }
    Sets the maximum size of an element in the inline direction

func (p MaxInlineSize) Key() string

func (p MaxInlineSize) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type MaxWidth struct{ PropertyBase }
    Sets the maximum width of an element

func (p MaxWidth) Key() string

func (p MaxWidth) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type Media struct{ PropertyBase }
    Sets the style rules for different media types/devices/sizes

func (p Media) Key() string

func (p Media) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type MinBlockSize struct{ PropertyBase }
    Sets the minimum size of an element in the block direction

func (p MinBlockSize) Key() string

func (p MinBlockSize) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type MinHeight struct{ PropertyBase }
    Sets the minimum height of an element

func (p MinHeight) Key() string

func (p MinHeight) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type MinInlineSize struct{ PropertyBase }
    Sets the minimum size of an element in the inline direction

func (p MinInlineSize) Key() string

func (p MinInlineSize) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type MinWidth struct{ PropertyBase }
    Sets the minimum width of an element

func (p MinWidth) Key() string

func (p MinWidth) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type MixBlendMode struct{ PropertyBase }
    Specifies how an element's content should blend with its direct parent
    background

func (p MixBlendMode) Key() string

func (p MixBlendMode) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type ObjectFit struct{ PropertyBase }
    Specifies how the contents of a replaced element should be fitted to the box
    established by its used height and width

func (p ObjectFit) Key() string

func (p ObjectFit) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type ObjectPosition struct{ PropertyBase }
    Specifies the alignment of the replaced element inside its box

func (p ObjectPosition) Key() string

func (p ObjectPosition) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type Offset struct{ PropertyBase }
    Is a shorthand, and specifies how to animate an element along a path

func (p Offset) Key() string

func (p Offset) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type OffsetAnchor struct{ PropertyBase }
    Specifies a point on an element that is fixed to the path it is animated
    along

func (p OffsetAnchor) Key() string

func (p OffsetAnchor) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type OffsetDistance struct{ PropertyBase }
    Specifies the position along a path where an animated element is placed

func (p OffsetDistance) Key() string

func (p OffsetDistance) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type OffsetPath struct{ PropertyBase }
    Specifies the path an element is animated along

func (p OffsetPath) Key() string

func (p OffsetPath) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type OffsetRotate struct{ PropertyBase }
    Specifies rotation of an element as it is animated along a path

func (p OffsetRotate) Key() string

func (p OffsetRotate) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type Opacity struct{ PropertyBase }
    Sets the opacity level for an element

func (p Opacity) Key() string

func (p Opacity) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type Order struct{ PropertyBase }
    Sets the order of the flexible item, relative to the rest

func (p Order) Key() string

func (p Order) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type Orphans struct{ PropertyBase }
    Sets the minimum number of lines that must be left at the bottom of a page
    or column

func (p Orphans) Key() string

func (p Orphans) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type Outline struct{ PropertyBase }
    A shorthand property for the outline-width, outline-style, and the
    outline-color properties

func (p Outline) Key() string

func (p Outline) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type OutlineColor struct{ PropertyBase }
    Sets the color of an outline

func (p OutlineColor) Key() string

func (p OutlineColor) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type OutlineOffset struct{ PropertyBase }
    Offsets an outline, and draws it beyond the border edge

func (p OutlineOffset) Key() string

func (p OutlineOffset) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type OutlineStyle struct{ PropertyBase }
    Sets the style of an outline

func (p OutlineStyle) Key() string

func (p OutlineStyle) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type OutlineWidth struct{ PropertyBase }
    Sets the width of an outline

func (p OutlineWidth) Key() string

func (p OutlineWidth) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type Overflow struct{ PropertyBase }
    Specifies what happens if content overflows an element's box

func (p Overflow) Key() string

func (p Overflow) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error
    overflow: visible|hidden|clip|scroll|auto|initial|inherit;

type OverflowAnchor struct{ PropertyBase }
    Specifies whether or not content in viewable area in a scrollable contianer
    should be pushed down when new content is loaded above

func (p OverflowAnchor) Key() string

func (p OverflowAnchor) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type OverflowWrap struct{ PropertyBase }
    Specifies whether or not the browser can break lines with long words,
    if they overflow the container

func (p OverflowWrap) Key() string

func (p OverflowWrap) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type OverflowX struct{ PropertyBase }
    Specifies whether or not to clip the left/right edges of the content,
    if it overflows the element's content area

func (p OverflowX) Key() string

func (p OverflowX) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type OverflowY struct{ PropertyBase }
    Specifies whether or not to clip the top/bottom edges of the content,
    if it overflows the element's content area

func (p OverflowY) Key() string

func (p OverflowY) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type OverscrollBehavior struct{ PropertyBase }
    Specifies whether to have scroll chaining or overscroll affordance in x- and
    y-directions

func (p OverscrollBehavior) Key() string

func (p OverscrollBehavior) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type OverscrollBehaviorBlock struct{ PropertyBase }
    Specifies whether to have scroll chaining or overscroll affordance in the
    block direction

func (p OverscrollBehaviorBlock) Key() string

func (p OverscrollBehaviorBlock) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type OverscrollBehaviorInline struct{ PropertyBase }
    Specifies whether to have scroll chaining or overscroll affordance in the
    inline direction

func (p OverscrollBehaviorInline) Key() string

func (p OverscrollBehaviorInline) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type OverscrollBehaviorX struct{ PropertyBase }
    Specifies whether to have scroll chaining or overscroll affordance in
    x-direction

func (p OverscrollBehaviorX) Key() string

func (p OverscrollBehaviorX) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type OverscrollBehaviorY struct{ PropertyBase }
    Specifies whether to have scroll chaining or overscroll affordance in
    y-directions

func (p OverscrollBehaviorY) Key() string

func (p OverscrollBehaviorY) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type Padding struct{ PropertyBase }
    A shorthand property for all the padding-* properties

func (p Padding) Key() string

func (Padding) Preprocess(values []rules.PropertyValue, rules []rules.Rule) ([]rules.PropertyValue, []rules.Rule)

func (Padding) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error
    length|initial|inherit

func (p Padding) Sort() int

type PaddingBlock struct{ PropertyBase }
    Specifies the padding in the block direction

func (p PaddingBlock) Key() string

func (p PaddingBlock) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

func (p PaddingBlock) Sort() int

type PaddingBlockEnd struct{ PropertyBase }
    Specifies the padding at the end in the block direction

func (p PaddingBlockEnd) Key() string

func (p PaddingBlockEnd) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

func (p PaddingBlockEnd) Sort() int

type PaddingBlockStart struct{ PropertyBase }
    Specifies the padding at the start in the block direction

func (p PaddingBlockStart) Key() string

func (p PaddingBlockStart) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

func (p PaddingBlockStart) Sort() int

type PaddingBottom struct{ PropertyBase }
    Sets the bottom padding of an element

func (p PaddingBottom) Key() string

func (PaddingBottom) Preprocess(values []rules.PropertyValue, rules []rules.Rule) ([]rules.PropertyValue, []rules.Rule)

func (PaddingBottom) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error
    length|initial|inherit

func (p PaddingBottom) Sort() int

type PaddingInline struct{ PropertyBase }
    Specifies the padding in the inline direction

func (p PaddingInline) Key() string

func (p PaddingInline) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

func (p PaddingInline) Sort() int

type PaddingInlineEnd struct{ PropertyBase }
    Specifies the padding at the end in the inline direction

func (p PaddingInlineEnd) Key() string

func (p PaddingInlineEnd) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

func (p PaddingInlineEnd) Sort() int

type PaddingInlineStart struct{ PropertyBase }
    Specifies the padding at the start in the inline direction

func (p PaddingInlineStart) Key() string

func (p PaddingInlineStart) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

func (p PaddingInlineStart) Sort() int

type PaddingLeft struct{ PropertyBase }
    Sets the left padding of an element

func (p PaddingLeft) Key() string

func (PaddingLeft) Preprocess(values []rules.PropertyValue, rules []rules.Rule) ([]rules.PropertyValue, []rules.Rule)

func (PaddingLeft) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error
    length|initial|inherit

func (p PaddingLeft) Sort() int

type PaddingRight struct{ PropertyBase }
    Sets the right padding of an element

func (p PaddingRight) Key() string

func (PaddingRight) Preprocess(values []rules.PropertyValue, rules []rules.Rule) ([]rules.PropertyValue, []rules.Rule)

func (PaddingRight) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error
    length|initial|inherit

func (p PaddingRight) Sort() int

type PaddingTop struct{ PropertyBase }
    Sets the top padding of an element

func (p PaddingTop) Key() string

func (PaddingTop) Preprocess(values []rules.PropertyValue, rules []rules.Rule) ([]rules.PropertyValue, []rules.Rule)

func (PaddingTop) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error
    length|initial|inherit

func (p PaddingTop) Sort() int

type PageBreakAfter struct{ PropertyBase }
    Sets the page-break behavior after an element

func (p PageBreakAfter) Key() string

func (p PageBreakAfter) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type PageBreakBefore struct{ PropertyBase }
    Sets the page-break behavior before an element

func (p PageBreakBefore) Key() string

func (p PageBreakBefore) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type PageBreakInside struct{ PropertyBase }
    Sets the page-break behavior inside an element

func (p PageBreakInside) Key() string

func (p PageBreakInside) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type PaintOrder struct{ PropertyBase }
    Sets the order of how an SVG element or text is painted.

func (p PaintOrder) Key() string

func (p PaintOrder) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type Perspective struct{ PropertyBase }
    Gives a 3D-positioned element some perspective

func (p Perspective) Key() string

func (p Perspective) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type PerspectiveOrigin struct{ PropertyBase }
    Defines at which position the user is looking at the 3D-positioned element

func (p PerspectiveOrigin) Key() string

func (p PerspectiveOrigin) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type PlaceContent struct{ PropertyBase }
    Specifies align-content and justify-content property values for flexbox and
    grid layouts

func (p PlaceContent) Key() string

func (p PlaceContent) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type PlaceItems struct{ PropertyBase }
    Specifies align-items and justify-items property values for grid layouts

func (p PlaceItems) Key() string

func (p PlaceItems) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type PlaceSelf struct{ PropertyBase }
    Specifies align-self and justify-self property values for grid layouts

func (p PlaceSelf) Key() string

func (p PlaceSelf) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type PointerEvents struct{ PropertyBase }
    Defines whether or not an element reacts to pointer events

func (p PointerEvents) Key() string

func (p PointerEvents) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type Position struct{ PropertyBase }
    Specifies the type of positioning method used for an element (static,
    relative, absolute or fixed)

func (p Position) Key() string

func (p Position) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error
    static|absolute|fixed|relative|sticky|initial|inherit

type PropertyBase struct{}

func (PropertyBase) Preprocess(values []rules.PropertyValue, rules []rules.Rule) ([]rules.PropertyValue, []rules.Rule)

func (PropertyBase) Sort() int

type Quotes struct{ PropertyBase }
    Sets the type of quotation marks for embedded quotations

func (p Quotes) Key() string

func (p Quotes) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type Resize struct{ PropertyBase }
    Defines if (and how) an element is resizable by the user

func (p Resize) Key() string

func (p Resize) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type Right struct{ PropertyBase }
    Specifies the right position of a positioned element

func (p Right) Key() string

func (p Right) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error
    auto|length|initial|inherit

type Rotate struct{ PropertyBase }
    Specifies the rotation of an element

func (p Rotate) Key() string

func (p Rotate) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type RowGap struct{ PropertyBase }
    Specifies the gap between the grid rows

func (p RowGap) Key() string

func (p RowGap) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type Scale struct{ PropertyBase }
    Specifies the size of an element by scaling up or down

func (p Scale) Key() string

func (p Scale) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type ScrollBehavior struct{ PropertyBase }
    Specifies whether to smoothly animate the scroll position in a scrollable
    box, instead of a straight jump

func (p ScrollBehavior) Key() string

func (p ScrollBehavior) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type ScrollMargin struct{ PropertyBase }
    Specifies the margin between the snap position and the container

func (p ScrollMargin) Key() string

func (p ScrollMargin) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type ScrollMarginBlock struct{ PropertyBase }
    Specifies the margin between the snap position and the container in the
    block direction

func (p ScrollMarginBlock) Key() string

func (p ScrollMarginBlock) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type ScrollMarginBlockEnd struct{ PropertyBase }
    Specifies the end margin between the snap position and the container in the
    block direction

func (p ScrollMarginBlockEnd) Key() string

func (p ScrollMarginBlockEnd) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type ScrollMarginBlockStart struct{ PropertyBase }
    Specifies the start margin between the snap position and the container in
    the block direction

func (p ScrollMarginBlockStart) Key() string

func (p ScrollMarginBlockStart) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type ScrollMarginBottom struct{ PropertyBase }
    Specifies the margin between the snap position on the bottom side and the
    container

func (p ScrollMarginBottom) Key() string

func (p ScrollMarginBottom) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type ScrollMarginInline struct{ PropertyBase }
    Specifies the margin between the snap position and the container in the
    inline direction

func (p ScrollMarginInline) Key() string

func (p ScrollMarginInline) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type ScrollMarginInlineEnd struct{ PropertyBase }
    Specifies the end margin between the snap position and the container in the
    inline direction

func (p ScrollMarginInlineEnd) Key() string

func (p ScrollMarginInlineEnd) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type ScrollMarginInlineStart struct{ PropertyBase }
    Specifies the start margin between the snap position and the container in
    the inline direction

func (p ScrollMarginInlineStart) Key() string

func (p ScrollMarginInlineStart) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type ScrollMarginLeft struct{ PropertyBase }
    Specifies the margin between the snap position on the left side and the
    container

func (p ScrollMarginLeft) Key() string

func (p ScrollMarginLeft) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type ScrollMarginRight struct{ PropertyBase }
    Specifies the margin between the snap position on the right side and the
    container

func (p ScrollMarginRight) Key() string

func (p ScrollMarginRight) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type ScrollMarginTop struct{ PropertyBase }
    Specifies the margin between the snap position on the top side and the
    container

func (p ScrollMarginTop) Key() string

func (p ScrollMarginTop) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type ScrollPadding struct{ PropertyBase }
    Specifies the distance from the container to the snap position on the child
    elements

func (p ScrollPadding) Key() string

func (p ScrollPadding) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type ScrollPaddingBlock struct{ PropertyBase }
    Specifies the distance in block direction from the container to the snap
    position on the child elements

func (p ScrollPaddingBlock) Key() string

func (p ScrollPaddingBlock) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type ScrollPaddingBlockEnd struct{ PropertyBase }
    Specifies the distance in block direction from the end of the container to
    the snap position on the child elements

func (p ScrollPaddingBlockEnd) Key() string

func (p ScrollPaddingBlockEnd) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type ScrollPaddingBlockStart struct{ PropertyBase }
    Specifies the distance in block direction from the start of the container to
    the snap position on the child elements

func (p ScrollPaddingBlockStart) Key() string

func (p ScrollPaddingBlockStart) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type ScrollPaddingBottom struct{ PropertyBase }
    Specifies the distance from the bottom of the container to the snap position
    on the child elements

func (p ScrollPaddingBottom) Key() string

func (p ScrollPaddingBottom) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type ScrollPaddingInline struct{ PropertyBase }
    Specifies the distance in inline direction from the container to the snap
    position on the child elements

func (p ScrollPaddingInline) Key() string

func (p ScrollPaddingInline) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type ScrollPaddingInlineEnd struct{ PropertyBase }
    Specifies the distance in inline direction from the end of the container to
    the snap position on the child elements

func (p ScrollPaddingInlineEnd) Key() string

func (p ScrollPaddingInlineEnd) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type ScrollPaddingInlineStart struct{ PropertyBase }
    Specifies the distance in inline direction from the start of the container
    to the snap position on the child elements

func (p ScrollPaddingInlineStart) Key() string

func (p ScrollPaddingInlineStart) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type ScrollPaddingLeft struct{ PropertyBase }
    Specifies the distance from the left side of the container to the snap
    position on the child elements

func (p ScrollPaddingLeft) Key() string

func (p ScrollPaddingLeft) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type ScrollPaddingRight struct{ PropertyBase }
    Specifies the distance from the right side of the container to the snap
    position on the child elements

func (p ScrollPaddingRight) Key() string

func (p ScrollPaddingRight) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type ScrollPaddingTop struct{ PropertyBase }
    Specifies the distance from the top of the container to the snap position on
    the child elements

func (p ScrollPaddingTop) Key() string

func (p ScrollPaddingTop) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type ScrollSnapAlign struct{ PropertyBase }
    Specifies where to position elements when the user stops scrolling

func (p ScrollSnapAlign) Key() string

func (p ScrollSnapAlign) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type ScrollSnapStop struct{ PropertyBase }
    Specifies scroll behaviour after fast swipe on trackpad or touch screen

func (p ScrollSnapStop) Key() string

func (p ScrollSnapStop) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type ScrollSnapType struct{ PropertyBase }
    Specifies how snap behaviour should be when scrolling

func (p ScrollSnapType) Key() string

func (p ScrollSnapType) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type ScrollbarColor struct{ PropertyBase }
    Specifies the color of the scrollbar of an element

func (p ScrollbarColor) Key() string

func (p ScrollbarColor) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type TabSize struct{ PropertyBase }
    Specifies the width of a tab character

func (p TabSize) Key() string

func (p TabSize) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type TableLayout struct{ PropertyBase }
    Defines the algorithm used to lay out table cells, rows, and columns

func (p TableLayout) Key() string

func (p TableLayout) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type TextAlign struct{ PropertyBase }
    Specifies the horizontal alignment of text

func (p TextAlign) Key() string

func (p TextAlign) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error
    left|right|center|justify|initial|inherit

type TextAlignLast struct{ PropertyBase }
    Describes how the last line of a block or a line right before a forced line
    break is aligned when text-align is "justify"

func (p TextAlignLast) Key() string

func (p TextAlignLast) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type TextCombineUpright struct{ PropertyBase }
    Specifies the combination of multiple characters into the space of a single
    character

func (p TextCombineUpright) Key() string

func (p TextCombineUpright) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type TextDecoration struct{ PropertyBase }
    Specifies the decoration added to text

func (p TextDecoration) Key() string

func (p TextDecoration) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type TextDecorationColor struct{ PropertyBase }
    Specifies the color of the text-decoration

func (p TextDecorationColor) Key() string

func (p TextDecorationColor) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type TextDecorationLine struct{ PropertyBase }
    Specifies the type of line in a text-decoration

func (p TextDecorationLine) Key() string

func (p TextDecorationLine) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type TextDecorationStyle struct{ PropertyBase }
    Specifies the style of the line in a text decoration

func (p TextDecorationStyle) Key() string

func (p TextDecorationStyle) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type TextDecorationThickness struct{ PropertyBase }
    Specifies the thickness of the decoration line

func (p TextDecorationThickness) Key() string

func (p TextDecorationThickness) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type TextEmphasis struct{ PropertyBase }
    Applies emphasis marks to text

func (p TextEmphasis) Key() string

func (p TextEmphasis) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type TextIndent struct{ PropertyBase }
    Specifies the indentation of the first line in a text-block

func (p TextIndent) Key() string

func (p TextIndent) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type TextJustify struct{ PropertyBase }
    Specifies the justification method used when text-align is "justify"

func (p TextJustify) Key() string

func (p TextJustify) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type TextOrientation struct{ PropertyBase }
    Defines the orientation of characters in a line

func (p TextOrientation) Key() string

func (p TextOrientation) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type TextOverflow struct{ PropertyBase }
    Specifies what should happen when text overflows the containing element

func (p TextOverflow) Key() string

func (p TextOverflow) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type TextShadow struct{ PropertyBase }
    Adds shadow to text

func (p TextShadow) Key() string

func (p TextShadow) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type TextTransform struct{ PropertyBase }
    Controls the capitalization of text

func (p TextTransform) Key() string

func (p TextTransform) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type TextUnderlinePosition struct{ PropertyBase }
    Specifies the position of the underline which is set using the
    text-decoration property

func (p TextUnderlinePosition) Key() string

func (p TextUnderlinePosition) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type Top struct{ PropertyBase }
    Specifies the top position of a positioned element

func (p Top) Key() string

func (p Top) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error
    auto|length|initial|inherit

type Transform struct{ PropertyBase }
    Applies a 2D or 3D transformation to an element

func (p Transform) Key() string

func (p Transform) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error
    none|transform-functions|initial|inherit

type TransformOrigin struct{ PropertyBase }
    Allows you to change the position on transformed elements

func (p TransformOrigin) Key() string

func (p TransformOrigin) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type TransformStyle struct{ PropertyBase }
    Specifies how nested elements are rendered in 3D space

func (p TransformStyle) Key() string

func (p TransformStyle) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type Transition struct{ PropertyBase }
    A shorthand property for all the transition-* properties

func (p Transition) Key() string

func (p Transition) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type TransitionDelay struct{ PropertyBase }
    Specifies when the transition effect will start

func (p TransitionDelay) Key() string

func (p TransitionDelay) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type TransitionDuration struct{ PropertyBase }
    Specifies how many seconds or milliseconds a transition effect takes to
    complete

func (p TransitionDuration) Key() string

func (p TransitionDuration) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type TransitionProperty struct{ PropertyBase }
    Specifies the name of the CSS property the transition effect is for

func (p TransitionProperty) Key() string

func (p TransitionProperty) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type TransitionTimingFunction struct{ PropertyBase }
    Specifies the speed curve of the transition effect

func (p TransitionTimingFunction) Key() string

func (p TransitionTimingFunction) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type Translate struct{ PropertyBase }
    Specifies the position of an element

func (p Translate) Key() string

func (p Translate) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type UnicodeBidi struct{ PropertyBase }
    Used together with the direction property to set or return whether the text
    should be overridden to support multiple languages in the same document

func (p UnicodeBidi) Key() string

func (p UnicodeBidi) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type UserSelect struct{ PropertyBase }
    Specifies whether the text of an element can be selected

func (p UserSelect) Key() string

func (p UserSelect) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type VerticalAlign struct{ PropertyBase }
    Sets the vertical alignment of an element

func (p VerticalAlign) Key() string

func (p VerticalAlign) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error
    auto|baseline|bottom|middle|sub|super|text-bottom|text-top|top|initial|inherit

type Visibility struct{ PropertyBase }
    Specifies whether or not an element is visible

func (p Visibility) Key() string

func (p Visibility) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error
    visibility: visible|hidden|collapse|initial|inherit;

type WhiteSpace struct{ PropertyBase }
    Specifies how white-space inside an element is handled

func (p WhiteSpace) Key() string

func (p WhiteSpace) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type Widows struct{ PropertyBase }
    Sets the minimum number of lines that must be left at the top of a page or
    column

func (p Widows) Key() string

func (p Widows) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type Width struct{ PropertyBase }
    Sets the width of an element

func (p Width) Key() string

func (p Width) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type WordBreak struct{ PropertyBase }
    Specifies how words should break when reaching the end of a line

func (p WordBreak) Key() string

func (p WordBreak) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type WordSpacing struct{ PropertyBase }
    Increases or decreases the space between words in a text

func (p WordSpacing) Key() string

func (p WordSpacing) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type WordWrap struct{ PropertyBase }
    Allows long, unbreakable words to be broken and wrap to the next line

func (p WordWrap) Key() string

func (p WordWrap) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type WritingMode struct{ PropertyBase }
    Specifies whether lines of text are laid out horizontally or vertically

func (p WritingMode) Key() string

func (p WritingMode) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

type ZIndex struct{ PropertyBase }
    Sets the stack order of a positioned element

func (p ZIndex) Key() string

func (p ZIndex) Process(panel *ui.Panel, elm *document.Element, values []rules.PropertyValue, host *engine.Host) error

