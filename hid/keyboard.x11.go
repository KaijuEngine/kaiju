//go:build linux || darwin

package hid

func ToKeyboardKey(nativeKey int) KeyboardKey {
	switch nativeKey {
	case 0x0000:
		return KeyboardKeyLeftAlt
	case 0x0000:
		return KeyboardKeyRightAlt
	case 0x0000:
		return KeyboardKeyLeftCtrl
	case 0x0000:
		return KeyboardKeyRightCtrl
	case 0x0000:
		return KeyboardKeyLeftShift
	case 0x0000:
		return KeyboardKeyRightShift
	case 0x0000:
		return KeyboardKeyA
	case 0x0000:
		return KeyboardKeyB
	case 0x0000:
		return KeyboardKeyC
	case 0x0000:
		return KeyboardKeyD
	case 0x0000:
		return KeyboardKeyE
	case 0x0000:
		return KeyboardKeyF
	case 0x0000:
		return KeyboardKeyG
	case 0x0000:
		return KeyboardKeyH
	case 0x0000:
		return KeyboardKeyI
	case 0x0000:
		return KeyboardKeyJ
	case 0x0000:
		return KeyboardKeyK
	case 0x0000:
		return KeyboardKeyL
	case 0x0000:
		return KeyboardKeyM
	case 0x0000:
		return KeyboardKeyN
	case 0x0000:
		return KeyboardKeyO
	case 0x0000:
		return KeyboardKeyP
	case 0x0000:
		return KeyboardKeyQ
	case 0x0000:
		return KeyboardKeyR
	case 0x0000:
		return KeyboardKeyS
	case 0x0000:
		return KeyboardKeyT
	case 0x0000:
		return KeyboardKeyU
	case 0x0000:
		return KeyboardKeyV
	case 0x0000:
		return KeyboardKeyW
	case 0x0000:
		return KeyboardKeyX
	case 0x0000:
		return KeyboardKeyY
	case 0x0000:
		return KeyboardKeyZ
	case 0x0000:
		return KeyboardKeyLeft
	case 0x0000:
		return KeyboardKeyUp
	case 0x0000:
		return KeyboardKeyRight
	case 0x0000:
		return KeyboardKeyDown
	case 0x0000:
		return KeyboardKeyEscape
	case 0x0000:
		return KeyboardKeyTab
	case 0x0000:
		return KeyboardKeySpace
	case 0x0000:
		return KeyboardKeyBackspace
	case 0x0000:
		return KeyboardKeyBackQuote
	case 0x0000:
		return KeyboardKeyDelete
	case 0x0000:
		return KeyboardKeyReturn
	case 0x0000:
		return KeyboardKeyEnter
	case 0x0000:
		return KeyboardKeyComma
	case 0x0000:
		return KeyboardKeyPeriod
	case 0x0000:
		return KeyboardKeyBackSlash
	case 0x0000:
		return KeyboardKeyForwardSlash
	case 0x0000:
		return KeyboardKeyOpenBracket
	case 0x0000:
		return KeyboardKeyCloseBracket
	case 0x0000:
		return KeyboardKeySemicolon
	case 0x0000:
		return KeyboardKeyQuote
	case 0x0000:
		return KeyboardKeyEqual
	case 0x0000:
		return KeyboardKeyMinus
	case 0x0000:
		return KeyboardKey0
	case 0x0000:
		return KeyboardKey1
	case 0x0000:
		return KeyboardKey2
	case 0x0000:
		return KeyboardKey3
	case 0x0000:
		return KeyboardKey4
	case 0x0000:
		return KeyboardKey5
	case 0x0000:
		return KeyboardKey6
	case 0x0000:
		return KeyboardKey7
	case 0x0000:
		return KeyboardKey8
	case 0x0000:
		return KeyboardKey9
	case 0x0000:
		return KeyboardNumKey0
	case 0x0000:
		return KeyboardNumKey1
	case 0x0000:
		return KeyboardNumKey2
	case 0x0000:
		return KeyboardNumKey3
	case 0x0000:
		return KeyboardNumKey4
	case 0x0000:
		return KeyboardNumKey5
	case 0x0000:
		return KeyboardNumKey6
	case 0x0000:
		return KeyboardNumKey7
	case 0x0000:
		return KeyboardNumKey8
	case 0x0000:
		return KeyboardNumKey9
	case 0x0000:
		return KeyboardKeyF1
	case 0x0000:
		return KeyboardKeyF2
	case 0x0000:
		return KeyboardKeyF3
	case 0x0000:
		return KeyboardKeyF4
	case 0x0000:
		return KeyboardKeyF5
	case 0x0000:
		return KeyboardKeyF6
	case 0x0000:
		return KeyboardKeyF7
	case 0x0000:
		return KeyboardKeyF8
	case 0x0000:
		return KeyboardKeyF9
	case 0x0000:
		return KeyboardKeyF10
	case 0x0000:
		return KeyboardKeyF11
	case 0x0000:
		return KeyboardKeyF12
	case 0x0000:
		return KeyboardKeyCapsLock
	case 0x0000:
		return KeyboardKeyScrollLock
	case 0x0000:
		return KeyboardKeyNumLock
	case 0x0000:
		return KeyboardKeyPrintScreen
	case 0x0000:
		return KeyboardKeyPause
	case 0x0000:
		return KeyboardKeyInsert
	case 0x0000:
		return KeyboardKeyHome
	case 0x0000:
		return KeyboardKeyPageUp
	case 0x0000:
		return KeyboardKeyPageDown
	case 0x0000:
		return KeyboardKeyEnd
	default:
		return KeyBoardKeyInvalid
	}
}
